{
	"id": "289cac3dfa544d49c247fae963463014",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Params.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ncontract Params {\n    bool public initialized;\n\n    // System contracts\n    address payable\n        public constant ValidatorContractAddr = payable(0x000000000000000000000000000000000000f000);\n    address\n        public constant PunishContractAddr = 0x000000000000000000000000000000000000F001;\n    address\n        public constant ProposalAddr = 0x000000000000000000000000000000000000F002;\n    address\n        public constant SlashingContractAddr = 0x000000000000000000000000000000000000f007;\n\n    // System params\n    uint16 public constant MaxValidators = 10000;\n    // Validator have to wait StakingLockPeriod blocks to withdraw staking\n    uint64 public constant StakingLockPeriod = 86400;\n    uint256 public constant MinimalStakingCoin = 32 ether;\n    \n    // Tiered validator system\n    uint256 public constant BronzeValidatorStaking = 3947 ether;    // ~$1,500\n    uint256 public constant SilverValidatorStaking = 39474 ether;   // ~$15,000  \n    uint256 public constant GoldValidatorStaking = 394737 ether;    // ~$150,000\n    uint256 public constant PlatinumValidatorStaking = 3947368 ether; // ~$1,500,000\n    \n    // minimum initial staking to become a validator (Bronze tier)\n    uint256 public constant minimumValidatorStaking = BronzeValidatorStaking;\n\n\n    // percent distribution of Gas Fee earned by validator 100000 = 100%\n    uint public constant stakerPartPercent = 30000;          //30% - Stakers (passive participation)\n    uint public constant validatorPartPercent = 60000;       //60% - Validators (they invest and run infrastructure)\n    uint public constant creatorPartPercent = 10000;         //10% - Creator (protocol development)\n    uint256 public constant extraRewardsPerBlock = 1 ether;  //  extra rewards will be added for distrubution\n    uint256 public rewardFund ;\n    uint256 public totalRewards;\n\n\n\n    modifier onlyMiner() {\n        require(msg.sender == block.coinbase, \"Miner only\");\n        _;\n    }\n\n    modifier onlyNotInitialized() {\n        require(!initialized, \"Already initialized\");\n        _;\n    }\n\n    modifier onlyInitialized() {\n        require(initialized, \"Not init yet\");\n        _;\n    }\n\n    modifier onlyPunishContract() {\n        require(msg.sender == PunishContractAddr, \"Punish contract only\");\n        _;\n    }\n\n    modifier onlyBlockEpoch(uint256 epoch) {\n        require(block.number % epoch == 0, \"Block epoch only\");\n        _;\n    }\n\n    modifier onlyValidatorsContract() {\n        require(\n            msg.sender == ValidatorContractAddr,\n            \"Validators contract only\"\n        );\n        _;\n    }\n\n    modifier onlyProposalContract() {\n        require(msg.sender == ProposalAddr, \"Proposal contract only\");\n        _;\n    }\n\n    modifier onlySlashingContract() {\n        require(msg.sender == SlashingContractAddr, \"Slashing contract only\");\n        _;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Params.sol": {
				"Params": {
					"abi": [
						{
							"inputs": [],
							"name": "BronzeValidatorStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GoldValidatorStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MaxValidators",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MinimalStakingCoin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PlatinumValidatorStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ProposalAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PunishContractAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SilverValidatorStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SlashingContractAddr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "StakingLockPeriod",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ValidatorContractAddr",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "creatorPartPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "extraRewardsPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumValidatorStaking",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardFund",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakerPartPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "validatorPartPercent",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Params.sol\":57:2896  contract Params {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Params.sol\":57:2896  contract Params {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6233be5d\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xcd779d21\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xcd779d21\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5074883\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdaa77ea2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdb78dd28\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xefe22266\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x6233be5d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8ae53dbd\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbe645692\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc967f90f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcad0ebf1\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x182637b8\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x182637b8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1b5e358c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x32dc3b94\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3a061bd3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42127ee7\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x0976c65d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a0b5e51\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Params.sol\":1248:1320  uint256 public constant minimumValidatorStaking = BronzeValidatorStaking */\n    tag_3:\n      tag_25\n        /* \"Params.sol\":898:908  3947 ether */\n      0xd5f7a0e3e5d2cc0000\n        /* \"Params.sol\":1248:1320  uint256 public constant minimumValidatorStaking = BronzeValidatorStaking */\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Params.sol\":1248:1320  uint256 public constant minimumValidatorStaking = BronzeValidatorStaking */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Params.sol\":1861:1888  uint256 public totalRewards */\n    tag_5:\n      tag_25\n      sload(0x02)\n      dup2\n      jump\n        /* \"Params.sol\":79:102  bool public initialized */\n    tag_6:\n      sload(0x00)\n      tag_35\n      swap1\n      0xff\n      and\n      dup2\n      jump\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":361:375   */\n      swap1\n      iszero\n        /* \"#utility.yul\":354:376   */\n      iszero\n        /* \"#utility.yul\":336:377   */\n      dup2\n      mstore\n        /* \"#utility.yul\":324:326   */\n      0x20\n        /* \"#utility.yul\":309:327   */\n      add\n        /* \"Params.sol\":79:102  bool public initialized */\n      tag_27\n        /* \"#utility.yul\":196:383   */\n      jump\n        /* \"Params.sol\":450:547  address... */\n    tag_7:\n      tag_39\n        /* \"Params.sol\":505:547  0x000000000000000000000000000000000000f007 */\n      0xf007\n        /* \"Params.sol\":450:547  address... */\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":552:584   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":534:585   */\n      dup2\n      mstore\n        /* \"#utility.yul\":522:524   */\n      0x20\n        /* \"#utility.yul\":507:525   */\n      add\n        /* \"Params.sol\":450:547  address... */\n      tag_27\n        /* \"#utility.yul\":388:591   */\n      jump\n        /* \"Params.sol\":254:349  address... */\n    tag_8:\n      tag_39\n        /* \"Params.sol\":307:349  0x000000000000000000000000000000000000F001 */\n      0xf001\n        /* \"Params.sol\":254:349  address... */\n      dup2\n      jump\n        /* \"Params.sol\":928:988  uint256 public constant SilverValidatorStaking = 39474 ether */\n    tag_9:\n      tag_25\n        /* \"Params.sol\":977:988  39474 ether */\n      0x085be3cbc1c8d9880000\n        /* \"Params.sol\":928:988  uint256 public constant SilverValidatorStaking = 39474 ether */\n      dup2\n      jump\n        /* \"Params.sol\":133:248  address payable... */\n    tag_10:\n      tag_39\n        /* \"Params.sol\":205:247  0x000000000000000000000000000000000000f000 */\n      0xf000\n        /* \"Params.sol\":133:248  address payable... */\n      dup2\n      jump\n        /* \"Params.sol\":1502:1551  uint public constant validatorPartPercent = 60000 */\n    tag_11:\n      tag_25\n        /* \"Params.sol\":1546:1551  60000 */\n      0xea60\n        /* \"Params.sol\":1502:1551  uint public constant validatorPartPercent = 60000 */\n      dup2\n      jump\n        /* \"Params.sol\":355:444  address... */\n    tag_12:\n      tag_39\n        /* \"Params.sol\":402:444  0x000000000000000000000000000000000000F002 */\n      0xf002\n        /* \"Params.sol\":355:444  address... */\n      dup2\n      jump\n        /* \"Params.sol\":1719:1773  uint256 public constant extraRewardsPerBlock = 1 ether */\n    tag_13:\n      tag_25\n        /* \"Params.sol\":1766:1773  1 ether */\n      0x0de0b6b3a7640000\n        /* \"Params.sol\":1719:1773  uint256 public constant extraRewardsPerBlock = 1 ether */\n      dup2\n      jump\n        /* \"Params.sol\":754:807  uint256 public constant MinimalStakingCoin = 32 ether */\n    tag_14:\n      tag_25\n        /* \"Params.sol\":799:807  32 ether */\n      0x01bc16d674ec800000\n        /* \"Params.sol\":754:807  uint256 public constant MinimalStakingCoin = 32 ether */\n      dup2\n      jump\n        /* \"Params.sol\":575:619  uint16 public constant MaxValidators = 10000 */\n    tag_15:\n      tag_65\n        /* \"Params.sol\":614:619  10000 */\n      0x2710\n        /* \"Params.sol\":575:619  uint16 public constant MaxValidators = 10000 */\n      dup2\n      jump\n    tag_65:\n      mload(0x40)\n        /* \"#utility.yul\":994:1000   */\n      0xffff\n        /* \"#utility.yul\":982:1001   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":964:1002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":952:954   */\n      0x20\n        /* \"#utility.yul\":937:955   */\n      add\n        /* \"Params.sol\":575:619  uint16 public constant MaxValidators = 10000 */\n      tag_27\n        /* \"#utility.yul\":820:1008   */\n      jump\n        /* \"Params.sol\":1091:1155  uint256 public constant PlatinumValidatorStaking = 3947368 ether */\n    tag_16:\n      tag_25\n        /* \"Params.sol\":1142:1155  3947368 ether */\n      0x0343e33f80dc000ca00000\n        /* \"Params.sol\":1091:1155  uint256 public constant PlatinumValidatorStaking = 3947368 ether */\n      dup2\n      jump\n        /* \"Params.sol\":1401:1447  uint public constant stakerPartPercent = 30000 */\n    tag_17:\n      tag_25\n        /* \"Params.sol\":1442:1447  30000 */\n      0x7530\n        /* \"Params.sol\":1401:1447  uint public constant stakerPartPercent = 30000 */\n      dup2\n      jump\n        /* \"Params.sol\":1010:1069  uint256 public constant GoldValidatorStaking = 394737 ether */\n    tag_18:\n      tag_25\n        /* \"Params.sol\":1057:1069  394737 ether */\n      0x5396bc536dbd89240000\n        /* \"Params.sol\":1010:1069  uint256 public constant GoldValidatorStaking = 394737 ether */\n      dup2\n      jump\n        /* \"Params.sol\":1619:1666  uint public constant creatorPartPercent = 10000 */\n    tag_19:\n      tag_25\n        /* \"Params.sol\":1661:1666  10000 */\n      0x2710\n        /* \"Params.sol\":1619:1666  uint public constant creatorPartPercent = 10000 */\n      dup2\n      jump\n        /* \"Params.sol\":700:748  uint64 public constant StakingLockPeriod = 86400 */\n    tag_20:\n      tag_81\n        /* \"Params.sol\":743:748  86400 */\n      0x015180\n        /* \"Params.sol\":700:748  uint64 public constant StakingLockPeriod = 86400 */\n      dup2\n      jump\n    tag_81:\n      mload(0x40)\n        /* \"#utility.yul\":1187:1205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1175:1206   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1157:1207   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1145:1147   */\n      0x20\n        /* \"#utility.yul\":1130:1148   */\n      add\n        /* \"Params.sol\":700:748  uint64 public constant StakingLockPeriod = 86400 */\n      tag_27\n        /* \"#utility.yul\":1013:1213   */\n      jump\n        /* \"Params.sol\":1829:1854  uint256 public rewardFund */\n    tag_21:\n      tag_25\n      sload(0x01)\n      dup2\n      jump\n\n    auxdata: 0xa2646970667358221220bc02a9898f51b063308b4232191009915894a958e0a907378ddf4c9c5e4939b964736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610297806100206000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636233be5d116100ad578063cd779d2111610071578063cd779d2114610212578063d50748831461021b578063daa77ea21461022c578063db78dd2814610235578063efe222661461025857600080fd5b80636233be5d146101bc5780638ae53dbd146101c5578063be645692146101d4578063c967f90f146101e4578063cad0ebf11461020057600080fd5b8063182637b8116100f4578063182637b81461016f5780631b5e358c1461019057806332dc3b94146101995780633a061bd3146101aa57806342127ee7146101b357600080fd5b80630976c65d146101265780630a0b5e51146101265780630e15561a14610149578063158ef93e14610152575b600080fd5b61013668d5f7a0e3e5d2cc000081565b6040519081526020015b60405180910390f35b61013660025481565b60005461015f9060ff1681565b6040519015158152602001610140565b61017861f00781565b6040516001600160a01b039091168152602001610140565b61017861f00181565b61013669085be3cbc1c8d988000081565b61017861f00081565b61013661ea6081565b61017861f00281565b610136670de0b6b3a764000081565b6101366801bc16d674ec80000081565b6101ed61271081565b60405161ffff9091168152602001610140565b6101366a0343e33f80dc000ca0000081565b61013661753081565b610136695396bc536dbd8924000081565b61013661271081565b61023f6201518081565b60405167ffffffffffffffff9091168152602001610140565b6101366001548156fea2646970667358221220bc02a9898f51b063308b4232191009915894a958e0a907378ddf4c9c5e4939b964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6233BE5D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCD779D21 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCD779D21 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xD5074883 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xDAA77EA2 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xDB78DD28 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xEFE22266 EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6233BE5D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x8AE53DBD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xBE645692 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xC967F90F EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCAD0EBF1 EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x182637B8 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x182637B8 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1B5E358C EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x32DC3B94 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x3A061BD3 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42127EE7 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x976C65D EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xA0B5E51 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x152 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH9 0xD5F7A0E3E5D2CC0000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF007 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF001 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH10 0x85BE3CBC1C8D9880000 DUP2 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0xEA60 DUP2 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF002 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH9 0x1BC16D674EC800000 DUP2 JUMP JUMPDEST PUSH2 0x1ED PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x136 PUSH11 0x343E33F80DC000CA00000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x7530 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH10 0x5396BC536DBD89240000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x23F PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x136 PUSH1 0x1 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC MUL 0xA9 DUP10 DUP16 MLOAD 0xB0 PUSH4 0x308B4232 NOT LT MULMOD SWAP2 PC SWAP5 0xA9 PC 0xE0 0xA9 SMOD CALLDATACOPY DUP14 0xDF 0x4C SWAP13 0x5E 0x49 CODECOPY 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "57:2839:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BronzeValidatorStaking_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GoldValidatorStaking_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MaxValidators_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MinimalStakingCoin_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PlatinumValidatorStaking_39": {
									"entryPoint": null,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ProposalAddr_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PunishContractAddr_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SilverValidatorStaking_33": {
									"entryPoint": null,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SlashingContractAddr_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@StakingLockPeriod_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ValidatorContractAddr_9": {
									"entryPoint": null,
									"id": 9,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@creatorPartPercent_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@extraRewardsPerBlock_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initialized_3": {
									"entryPoint": null,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minimumValidatorStaking_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardFund_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakerPartPercent_45": {
									"entryPoint": null,
									"id": 45,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalRewards_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@validatorPartPercent_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1215:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "291:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "301:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "313:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "301:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "343:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "361:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "361:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "354:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "260:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "271:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "282:4:1",
														"type": ""
													}
												],
												"src": "196:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "489:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "499:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "511:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "522:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "507:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "499:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "556:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "572:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "577:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "568:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "568:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "581:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "564:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "564:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "552:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "534:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "534:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "458:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "469:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "480:4:1",
														"type": ""
													}
												],
												"src": "388:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "713:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "723:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "735:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "731:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "731:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "723:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "765:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "780:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "796:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "801:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "792:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "792:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "805:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "788:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "788:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "776:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "776:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "758:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "758:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "682:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:1",
														"type": ""
													}
												],
												"src": "596:219:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "919:89:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "929:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "941:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "952:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "937:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "929:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "971:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "986:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "994:6:1",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "982:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "964:38:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "888:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "899:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "910:4:1",
														"type": ""
													}
												],
												"src": "820:188:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1112:101:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1122:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1134:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1122:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1164:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1179:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1187:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1175:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1175:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1157:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1157:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1157:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1081:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1092:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1103:4:1",
														"type": ""
													}
												],
												"src": "1013:200:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c80636233be5d116100ad578063cd779d2111610071578063cd779d2114610212578063d50748831461021b578063daa77ea21461022c578063db78dd2814610235578063efe222661461025857600080fd5b80636233be5d146101bc5780638ae53dbd146101c5578063be645692146101d4578063c967f90f146101e4578063cad0ebf11461020057600080fd5b8063182637b8116100f4578063182637b81461016f5780631b5e358c1461019057806332dc3b94146101995780633a061bd3146101aa57806342127ee7146101b357600080fd5b80630976c65d146101265780630a0b5e51146101265780630e15561a14610149578063158ef93e14610152575b600080fd5b61013668d5f7a0e3e5d2cc000081565b6040519081526020015b60405180910390f35b61013660025481565b60005461015f9060ff1681565b6040519015158152602001610140565b61017861f00781565b6040516001600160a01b039091168152602001610140565b61017861f00181565b61013669085be3cbc1c8d988000081565b61017861f00081565b61013661ea6081565b61017861f00281565b610136670de0b6b3a764000081565b6101366801bc16d674ec80000081565b6101ed61271081565b60405161ffff9091168152602001610140565b6101366a0343e33f80dc000ca0000081565b61013661753081565b610136695396bc536dbd8924000081565b61013661271081565b61023f6201518081565b60405167ffffffffffffffff9091168152602001610140565b6101366001548156fea2646970667358221220bc02a9898f51b063308b4232191009915894a958e0a907378ddf4c9c5e4939b964736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6233BE5D GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xCD779D21 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xCD779D21 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xD5074883 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xDAA77EA2 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0xDB78DD28 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xEFE22266 EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6233BE5D EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x8AE53DBD EQ PUSH2 0x1C5 JUMPI DUP1 PUSH4 0xBE645692 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xC967F90F EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xCAD0EBF1 EQ PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x182637B8 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x182637B8 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x1B5E358C EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x32DC3B94 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x3A061BD3 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x42127EE7 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x976C65D EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xA0B5E51 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x152 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136 PUSH9 0xD5F7A0E3E5D2CC0000 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x15F SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF007 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF001 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH10 0x85BE3CBC1C8D9880000 DUP2 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0xEA60 DUP2 JUMP JUMPDEST PUSH2 0x178 PUSH2 0xF002 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH9 0x1BC16D674EC800000 DUP2 JUMP JUMPDEST PUSH2 0x1ED PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x136 PUSH11 0x343E33F80DC000CA00000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x7530 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH10 0x5396BC536DBD89240000 DUP2 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x23F PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x136 PUSH1 0x1 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC MUL 0xA9 DUP10 DUP16 MLOAD 0xB0 PUSH4 0x308B4232 NOT LT MULMOD SWAP2 PC SWAP5 0xA9 PC 0xE0 0xA9 SMOD CALLDATACOPY DUP14 0xDF 0x4C SWAP13 0x5E 0x49 CODECOPY 0xB9 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "57:2839:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1248:72;;898:10;1248:72;;;;;160:25:1;;;148:2;133:18;1248:72:0;;;;;;;;1861:27;;;;;;79:23;;;;;;;;;;;;361:14:1;;354:22;336:41;;324:2;309:18;79:23:0;196:187:1;450:97:0;;505:42;450:97;;;;;-1:-1:-1;;;;;552:32:1;;;534:51;;522:2;507:18;450:97:0;388:203:1;254:95:0;;307:42;254:95;;928:60;;977:11;928:60;;133:115;;205:42;133:115;;1502:49;;1546:5;1502:49;;355:89;;402:42;355:89;;1719:54;;1766:7;1719:54;;754:53;;799:8;754:53;;575:44;;614:5;575:44;;;;;994:6:1;982:19;;;964:38;;952:2;937:18;575:44:0;820:188:1;1091:64:0;;1142:13;1091:64;;1401:46;;1442:5;1401:46;;1010:59;;1057:12;1010:59;;1619:47;;1661:5;1619:47;;700:48;;743:5;700:48;;;;;1187:18:1;1175:31;;;1157:50;;1145:2;1130:18;700:48:0;1013:200:1;1829:25:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132600",
								"executionCost": "177",
								"totalCost": "132777"
							},
							"external": {
								"BronzeValidatorStaking()": "230",
								"GoldValidatorStaking()": "228",
								"MaxValidators()": "293",
								"MinimalStakingCoin()": "251",
								"PlatinumValidatorStaking()": "295",
								"ProposalAddr()": "239",
								"PunishContractAddr()": "261",
								"SilverValidatorStaking()": "251",
								"SlashingContractAddr()": "239",
								"StakingLockPeriod()": "292",
								"ValidatorContractAddr()": "305",
								"creatorPartPercent()": "250",
								"extraRewardsPerBlock()": "229",
								"initialized()": "2400",
								"minimumValidatorStaking()": "208",
								"rewardFund()": "2394",
								"stakerPartPercent()": "206",
								"totalRewards()": "2352",
								"validatorPartPercent()": "295"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 2896,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bc02a9898f51b063308b4232191009915894a958e0a907378ddf4c9c5e4939b964736f6c63430008110033",
									".code": [
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "6233BE5D"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "CD779D21"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "CD779D21"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "D5074883"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "DAA77EA2"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "DB78DD28"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "EFE22266"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "6233BE5D"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "8AE53DBD"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "BE645692"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "C967F90F"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "CAD0EBF1"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "182637B8"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "182637B8"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "1B5E358C"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "32DC3B94"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "3A061BD3"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "42127EE7"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "976C65D"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "A0B5E51"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "E15561A"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "158EF93E"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 2896,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 898,
											"end": 908,
											"name": "PUSH",
											"source": 0,
											"value": "D5F7A0E3E5D2CC0000"
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1320,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1888,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1861,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1861,
											"end": 1888,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1861,
											"end": 1888,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1888,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79,
											"end": 102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 79,
											"end": 102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 79,
											"end": 102,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 79,
											"end": 102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79,
											"end": 102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 361,
											"end": 375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 361,
											"end": 375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 354,
											"end": 376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 336,
											"end": 377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 336,
											"end": 377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 324,
											"end": 326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 309,
											"end": 327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 79,
											"end": 102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 196,
											"end": 383,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 450,
											"end": 547,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 450,
											"end": 547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 450,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 505,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "F007"
										},
										{
											"begin": 450,
											"end": 547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 450,
											"end": 547,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 450,
											"end": 547,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 450,
											"end": 547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 450,
											"end": 547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 547,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 552,
											"end": 584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 552,
											"end": 584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 552,
											"end": 584,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 534,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 534,
											"end": 585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 522,
											"end": 524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 388,
											"end": 591,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 349,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 254,
											"end": 349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 254,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 307,
											"end": 349,
											"name": "PUSH",
											"source": 0,
											"value": "F001"
										},
										{
											"begin": 254,
											"end": 349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 254,
											"end": 349,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 928,
											"end": 988,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 928,
											"end": 988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 928,
											"end": 988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 977,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "85BE3CBC1C8D9880000"
										},
										{
											"begin": 928,
											"end": 988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 928,
											"end": 988,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 133,
											"end": 248,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 133,
											"end": 248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 133,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 205,
											"end": 247,
											"name": "PUSH",
											"source": 0,
											"value": "F000"
										},
										{
											"begin": 133,
											"end": 248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 133,
											"end": 248,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1551,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1502,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1546,
											"end": 1551,
											"name": "PUSH",
											"source": 0,
											"value": "EA60"
										},
										{
											"begin": 1502,
											"end": 1551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1551,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 355,
											"end": 444,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 355,
											"end": 444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 355,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 402,
											"end": 444,
											"name": "PUSH",
											"source": 0,
											"value": "F002"
										},
										{
											"begin": 355,
											"end": 444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 355,
											"end": 444,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1773,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1719,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1766,
											"end": 1773,
											"name": "PUSH",
											"source": 0,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1719,
											"end": 1773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1719,
											"end": 1773,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 754,
											"end": 807,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 754,
											"end": 807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 754,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 799,
											"end": 807,
											"name": "PUSH",
											"source": 0,
											"value": "1BC16D674EC800000"
										},
										{
											"begin": 754,
											"end": 807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 754,
											"end": 807,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 575,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 614,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 575,
											"end": 619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 619,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 619,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 575,
											"end": 619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 619,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 575,
											"end": 619,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1000,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 982,
											"end": 1001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1001,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1001,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 952,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 575,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 820,
											"end": 1008,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1155,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1091,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1142,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "343E33F80DC000CA00000"
										},
										{
											"begin": 1091,
											"end": 1155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1155,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1447,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1401,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "PUSH",
											"source": 0,
											"value": "7530"
										},
										{
											"begin": 1401,
											"end": 1447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1447,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1069,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1010,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1057,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "5396BC536DBD89240000"
										},
										{
											"begin": 1010,
											"end": 1069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1666,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1619,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1661,
											"end": 1666,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 1619,
											"end": 1666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1619,
											"end": 1666,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 743,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 700,
											"end": 748,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 700,
											"end": 748,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 700,
											"end": 748,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 700,
											"end": 748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 700,
											"end": 748,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 700,
											"end": 748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1206,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1207,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1157,
											"end": 1207,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 700,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1013,
											"end": 1213,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1854,
											"name": "JUMP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Params.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BronzeValidatorStaking()": "0a0b5e51",
							"GoldValidatorStaking()": "d5074883",
							"MaxValidators()": "c967f90f",
							"MinimalStakingCoin()": "be645692",
							"PlatinumValidatorStaking()": "cad0ebf1",
							"ProposalAddr()": "6233be5d",
							"PunishContractAddr()": "1b5e358c",
							"SilverValidatorStaking()": "32dc3b94",
							"SlashingContractAddr()": "182637b8",
							"StakingLockPeriod()": "db78dd28",
							"ValidatorContractAddr()": "3a061bd3",
							"creatorPartPercent()": "daa77ea2",
							"extraRewardsPerBlock()": "8ae53dbd",
							"initialized()": "158ef93e",
							"minimumValidatorStaking()": "0976c65d",
							"rewardFund()": "efe22266",
							"stakerPartPercent()": "cd779d21",
							"totalRewards()": "0e15561a",
							"validatorPartPercent()": "42127ee7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"BronzeValidatorStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GoldValidatorStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MaxValidators\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MinimalStakingCoin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PlatinumValidatorStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ProposalAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PunishContractAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SilverValidatorStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SlashingContractAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"StakingLockPeriod\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ValidatorContractAddr\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorPartPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"extraRewardsPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumValidatorStaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakerPartPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"validatorPartPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Params.sol\":\"Params\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Params.sol\":{\"keccak256\":\"0x059768f73637af9c9ec69c5c4a229b1511cecb8b3423b555510c93399fca4bd9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0e70c92a89477b233af4dbf2926b7d902899af5b80cd87fd13fa7270283904\",\"dweb:/ipfs/QmU8pQBNqSv24YWFogAb62vas7meLaifhv5atg2P9hftZ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Params.sol:Params",
								"label": "initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 56,
								"contract": "Params.sol:Params",
								"label": "rewardFund",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "Params.sol:Params",
								"label": "totalRewards",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Params.sol": {
				"ast": {
					"absolutePath": "Params.sol",
					"exportedSymbols": {
						"Params": [
							155
						]
					},
					"id": 156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Params",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "Params",
							"nameLocation": "66:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 3,
									"mutability": "mutable",
									"name": "initialized",
									"nameLocation": "91:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "79:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "79:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3a061bd3",
									"id": 9,
									"mutability": "constant",
									"name": "ValidatorContractAddr",
									"nameLocation": "173:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "133:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "133:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303066303030",
												"id": 7,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "205:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x000000000000000000000000000000000000f000"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "197:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 5,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "197:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 8,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "197:51:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1b5e358c",
									"id": 12,
									"mutability": "constant",
									"name": "PunishContractAddr",
									"nameLocation": "286:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "254:95:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303046303031",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "307:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000F001"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "6233be5d",
									"id": 15,
									"mutability": "constant",
									"name": "ProposalAddr",
									"nameLocation": "387:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "355:89:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "355:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303046303032",
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "402:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000F002"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "182637b8",
									"id": 18,
									"mutability": "constant",
									"name": "SlashingContractAddr",
									"nameLocation": "482:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "450:97:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "450:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303066303037",
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "505:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000f007"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c967f90f",
									"id": 21,
									"mutability": "constant",
									"name": "MaxValidators",
									"nameLocation": "598:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "575:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 19,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "575:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 20,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "614:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "db78dd28",
									"id": 24,
									"mutability": "constant",
									"name": "StakingLockPeriod",
									"nameLocation": "723:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "700:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 22,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "700:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"value": {
										"hexValue": "3836343030",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "743:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "86400"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "be645692",
									"id": 27,
									"mutability": "constant",
									"name": "MinimalStakingCoin",
									"nameLocation": "778:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "754:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "754:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3332",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "799:8:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_32000000000000000000_by_1",
											"typeString": "int_const 32000000000000000000"
										},
										"value": "32"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0a0b5e51",
									"id": 30,
									"mutability": "constant",
									"name": "BronzeValidatorStaking",
									"nameLocation": "873:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "849:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "849:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33393437",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "898:10:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3947000000000000000000_by_1",
											"typeString": "int_const 3947000000000000000000"
										},
										"value": "3947"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32dc3b94",
									"id": 33,
									"mutability": "constant",
									"name": "SilverValidatorStaking",
									"nameLocation": "952:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "928:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "928:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3339343734",
										"id": 32,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "977:11:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_39474000000000000000000_by_1",
											"typeString": "int_const 39474000000000000000000"
										},
										"value": "39474"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d5074883",
									"id": 36,
									"mutability": "constant",
									"name": "GoldValidatorStaking",
									"nameLocation": "1034:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1010:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1010:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333934373337",
										"id": 35,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1057:12:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_394737000000000000000000_by_1",
											"typeString": "int_const 394737000000000000000000"
										},
										"value": "394737"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cad0ebf1",
									"id": 39,
									"mutability": "constant",
									"name": "PlatinumValidatorStaking",
									"nameLocation": "1115:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1091:64:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1091:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33393437333638",
										"id": 38,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1142:13:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3947368000000000000000000_by_1",
											"typeString": "int_const 3947368000000000000000000"
										},
										"value": "3947368"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0976c65d",
									"id": 42,
									"mutability": "constant",
									"name": "minimumValidatorStaking",
									"nameLocation": "1272:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1248:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 40,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1248:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 41,
										"name": "BronzeValidatorStaking",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 30,
										"src": "1298:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cd779d21",
									"id": 45,
									"mutability": "constant",
									"name": "stakerPartPercent",
									"nameLocation": "1422:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1401:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1401:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330303030",
										"id": 44,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1442:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30000_by_1",
											"typeString": "int_const 30000"
										},
										"value": "30000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "42127ee7",
									"id": 48,
									"mutability": "constant",
									"name": "validatorPartPercent",
									"nameLocation": "1523:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1502:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 46,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1502:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630303030",
										"id": 47,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1546:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60000_by_1",
											"typeString": "int_const 60000"
										},
										"value": "60000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "daa77ea2",
									"id": 51,
									"mutability": "constant",
									"name": "creatorPartPercent",
									"nameLocation": "1640:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1619:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1619:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 50,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1661:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8ae53dbd",
									"id": 54,
									"mutability": "constant",
									"name": "extraRewardsPerBlock",
									"nameLocation": "1743:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1719:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1719:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 53,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1766:7:0",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "efe22266",
									"id": 56,
									"mutability": "mutable",
									"name": "rewardFund",
									"nameLocation": "1844:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1829:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1829:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 58,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "1876:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "1861:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1861:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1918:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 61,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1936:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1940:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1936:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 63,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1950:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1956:8:0",
																"memberName": "coinbase",
																"nodeType": "MemberAccess",
																"src": "1950:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1936:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e6572206f6e6c79",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1966:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d6392c6faab712b31ec3ab00574e3479d2b7ae01778879bb14713c5fb7b301b",
																"typeString": "literal_string \"Miner only\""
															},
															"value": "Miner only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d6392c6faab712b31ec3ab00574e3479d2b7ae01778879bb14713c5fb7b301b",
																"typeString": "literal_string \"Miner only\""
															}
														],
														"id": 60,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1928:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1928:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "1928:51:0"
											},
											{
												"id": 69,
												"nodeType": "PlaceholderStatement",
												"src": "1989:1:0"
											}
										]
									},
									"id": 71,
									"name": "onlyMiner",
									"nameLocation": "1906:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1915:2:0"
									},
									"src": "1897:100:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2033:72:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2051:12:0",
															"subExpression": {
																"id": 74,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "2052:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e697469616c697a6564",
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2065:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															},
															"value": "Already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
																"typeString": "literal_string \"Already initialized\""
															}
														],
														"id": 73,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2043:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2043:44:0"
											},
											{
												"id": 79,
												"nodeType": "PlaceholderStatement",
												"src": "2097:1:0"
											}
										]
									},
									"id": 81,
									"name": "onlyNotInitialized",
									"nameLocation": "2012:18:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2030:2:0"
									},
									"src": "2003:102:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "2138:64:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 84,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "2156:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e697420796574",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2169:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a738e8d703c9a404bd98bc4a2cbf5be6673600c35a3c7e9f6c7df07bbcdb4588",
																"typeString": "literal_string \"Not init yet\""
															},
															"value": "Not init yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a738e8d703c9a404bd98bc4a2cbf5be6673600c35a3c7e9f6c7df07bbcdb4588",
																"typeString": "literal_string \"Not init yet\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2148:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2148:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "2148:36:0"
											},
											{
												"id": 88,
												"nodeType": "PlaceholderStatement",
												"src": "2194:1:0"
											}
										]
									},
									"id": 90,
									"name": "onlyInitialized",
									"nameLocation": "2120:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:2:0"
									},
									"src": "2111:91:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2238:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 93,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2256:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2260:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2256:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 95,
																"name": "PunishContractAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "2270:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2256:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50756e69736820636f6e7472616374206f6e6c79",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2290:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2f1dd422640c5ced7b14598417e795aa146d692645e37141f743bbaf583f80e",
																"typeString": "literal_string \"Punish contract only\""
															},
															"value": "Punish contract only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2f1dd422640c5ced7b14598417e795aa146d692645e37141f743bbaf583f80e",
																"typeString": "literal_string \"Punish contract only\""
															}
														],
														"id": 92,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2248:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2248:65:0"
											},
											{
												"id": 100,
												"nodeType": "PlaceholderStatement",
												"src": "2323:1:0"
											}
										]
									},
									"id": 102,
									"name": "onlyPunishContract",
									"nameLocation": "2217:18:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:2:0"
									},
									"src": "2208:123:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "2376:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 107,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2394:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2400:6:0",
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "2394:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 109,
																	"name": "epoch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "2409:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2394:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2394:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c6f636b2065706f6368206f6e6c79",
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2421:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bc83e72e1963dcdf2df08afece0cb27c4ddc2a849ef3c4a4c21afa02ec2b60a",
																"typeString": "literal_string \"Block epoch only\""
															},
															"value": "Block epoch only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bc83e72e1963dcdf2df08afece0cb27c4ddc2a849ef3c4a4c21afa02ec2b60a",
																"typeString": "literal_string \"Block epoch only\""
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2386:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2386:54:0"
											},
											{
												"id": 116,
												"nodeType": "PlaceholderStatement",
												"src": "2450:1:0"
											}
										]
									},
									"id": 118,
									"name": "onlyBlockEpoch",
									"nameLocation": "2346:14:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "2369:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "2361:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2360:15:0"
									},
									"src": "2337:121:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "2498:134:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 121,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2529:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2533:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2529:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 123,
																"name": "ValidatorContractAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "2543:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2529:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56616c696461746f727320636f6e7472616374206f6e6c79",
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2578:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6edb5b7a5fa62866a8c151d7ffab619e0d558bafaff7cd77baab0d06177321f8",
																"typeString": "literal_string \"Validators contract only\""
															},
															"value": "Validators contract only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6edb5b7a5fa62866a8c151d7ffab619e0d558bafaff7cd77baab0d06177321f8",
																"typeString": "literal_string \"Validators contract only\""
															}
														],
														"id": 120,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2508:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2508:106:0"
											},
											{
												"id": 128,
												"nodeType": "PlaceholderStatement",
												"src": "2624:1:0"
											}
										]
									},
									"id": 130,
									"name": "onlyValidatorsContract",
									"nameLocation": "2473:22:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2495:2:0"
									},
									"src": "2464:168:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2670:89:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 133,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2688:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2692:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 135,
																"name": "ProposalAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "2702:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2688:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726f706f73616c20636f6e7472616374206f6e6c79",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2716:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3124368633474e4bccd68569909a4566b6e5bd54ac81f29d7319b609c531331f",
																"typeString": "literal_string \"Proposal contract only\""
															},
															"value": "Proposal contract only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3124368633474e4bccd68569909a4566b6e5bd54ac81f29d7319b609c531331f",
																"typeString": "literal_string \"Proposal contract only\""
															}
														],
														"id": 132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2680:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2680:61:0"
											},
											{
												"id": 140,
												"nodeType": "PlaceholderStatement",
												"src": "2751:1:0"
											}
										]
									},
									"id": 142,
									"name": "onlyProposalContract",
									"nameLocation": "2647:20:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:2:0"
									},
									"src": "2638:121:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "2797:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 145,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2815:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2819:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2815:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 147,
																"name": "SlashingContractAddr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "2829:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2815:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c617368696e6720636f6e7472616374206f6e6c79",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2851:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c87c03b1a97e04dc075538cdfb482692863745e012134000a242c235f1e3d5f",
																"typeString": "literal_string \"Slashing contract only\""
															},
															"value": "Slashing contract only"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c87c03b1a97e04dc075538cdfb482692863745e012134000a242c235f1e3d5f",
																"typeString": "literal_string \"Slashing contract only\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2807:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2807:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2807:69:0"
											},
											{
												"id": 152,
												"nodeType": "PlaceholderStatement",
												"src": "2886:1:0"
											}
										]
									},
									"id": 154,
									"name": "onlySlashingContract",
									"nameLocation": "2774:20:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2794:2:0"
									},
									"src": "2765:129:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 156,
							"src": "57:2839:0",
							"usedErrors": []
						}
					],
					"src": "32:2865:0"
				},
				"id": 0
			}
		}
	}
}